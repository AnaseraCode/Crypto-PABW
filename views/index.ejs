<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard</title>
  <link rel="stylesheet" href="/styles.css">
  <style>
    body {
      background-color: #141E30; 
      color: white;
      font-family: Arial, sans-serif;
    }
    .widget-container {
      display: flex;
      flex-direction: column; /* Maintain column layout for overall container */
      align-items: center;
      padding: 20px;
    }
    .widget-row {
      display: flex;
      flex-direction: row; /* Change direction to row for horizontal alignment */
      justify-content: space-between; /* Space out widgets evenly */
      width: 90%;
      margin: 10px 0;
    }
    .widget {
      width: 48%; /* Adjust width to fit two widgets side by side */
      margin: 10px 0;
    }
    h1 {
      text-align: center;
      margin-top: 0;
    }
    .container {
      padding: 20px;
      background-color: #1E293B;
      border-radius: 8px;
      width: 90%; /* Control width of the table container */
      margin: auto; /* Center the container */
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }
    th, td {
      padding: 12px;
      text-align: left;
    }
    th {
      background-color: #3B4252;
    }
    tr:nth-child(even) {
      background-color: #2E3440;
    }
    .button {
      background-color: #4C566A;
      color: white;
      padding: 10px 20px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
    .button:hover {
      background-color: #5E81AC;
    }
    .pagination {
      text-align: center;
      margin-top: 20px;
    }
    .pagination button {
      background-color: #900000;
      color: white;
      padding: 10px 20px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      margin: 0 5px;
    }
    .pagination button:disabled {
      background-color: #310000;
      cursor: not-allowed;
    }
  </style>
</head>
<body>
  <script type="text/javascript" src="https://files.coinmarketcap.com/static/widget/coinMarquee.js"></script>
  <div id="coinmarketcap-widget-marquee" coins="1,1027,825,52,5994,74,512" currency="IDR" theme="dark" transparent="false" show-symbol-logo="true"></div>
  <div class="widget-container">
    <h1>Radifo Currency</h1>
  </div>

  <div class="container">
    <form id="monitorForm" action="/monitor" method="get">
      <div class="search-bar">
        <input type="text" id="search" placeholder="Search for a coin" oninput="searchCoins()">
      </div>
      <div class="button-container">
        <a href="/watchlist" class="button">Watchlist</a>
        <a href="/portfolio" class="button">Portfolio</a>
      </div>
    </form>
    
    <table>
      <thead>
        <tr>
          <th>No</th>
          <th>Name</th>
          <th>Symbol</th>
          <th>Price (IDR)</th>
          <th>1h %</th>
          <th>24h %</th>
          <th>7d %</th>
          <th>Monitor</th>
        </tr>
      </thead>
      <tbody id="coinTableBody">
        <% coins.slice((currentPage - 1) * 20, currentPage * 20).forEach((coin, index) => { %>
          <tr>
            <td><%= (currentPage - 1) * 20 + index + 1 %></td>
            <td><a href="/chart/<%= coin.symbol %>"><%= coin.name %></a></td>
            <td><%= coin.symbol %></td>
            <td>Rp<%= (coin.quote.USD.price * 16000).toFixed(2) %></td>
            <td><%= coin.quote.USD.percent_change_1h.toFixed(2) %> %</td>
            <td><%= coin.quote.USD.percent_change_24h.toFixed(2) %> %</td>
            <td><%= coin.quote.USD.percent_change_7d.toFixed(2) %> %</td>
            <td><input type="checkbox" name="selectedCoins" value="<%= coin.symbol %>"></td>
          </tr>
        <% }); %>
      </tbody>
    </table>
    <div class="pagination">
      <button onclick="window.location.href='/prevPage?start=<%= (currentPage - 1) * 20 + 1 %>'" <%= currentPage === 1 ? 'disabled' : '' %>>Prev Page</button>
      <button onclick="window.location.href='/nextPage?start=<%= currentPage * 20 + 1 %>'">Next Page</button>
    </div>
  </div>

  <div class="widget-row">
    <div class="widget">
      <div class="tradingview-widget-container">
        <div class="tradingview-widget-container__widget"></div>
        <div class="tradingview-widget-copyright">
          <a href="https://id.tradingview.com/" rel="noopener nofollow" target="_blank">
            <span class="blue-text">Lacak seluruh pasar di TradingView</span>
          </a>
        </div>
        <script type="text/javascript" src="https://s3.tradingview.com/external-embedding/embed-widget-timeline.js" async>
        ({
          "container_id": "tradingview-widget-container",
          "feedMode": "market",
          "isTransparent": false,
          "displayMode": "regular",
          "width": "100%",
          "height": "100%",
          "colorTheme": "dark",
          "locale": "en",
          "market": "crypto"
        })
        </script>
      </div>
    </div>
    <div class="widget">
      <!-- TradingView Widget BEGIN -->
      <div class="tradingview-widget-container">
        <div class="tradingview-widget-container__widget"></div>
        <div class="tradingview-widget-copyright">
          <a href="https://id.tradingview.com/" rel="noopener nofollow" target="_blank">
            <span class="blue-text">Lacak seluruh pasar di TradingView</span>
          </a>
        </div>
        <script type="text/javascript" src="https://s3.tradingview.com/external-embedding/embed-widget-market-overview.js" async>
        ({
        "title": "Cryptocurrencies",
        "title_raw": "Cryptocurrencies",
        "tabs": [
          {
            "title": "Ikhtisar",
            "title_raw": "Ikhtisar",
            "symbols": [
              {
                "s": "CRYPTOCAP:TOTAL"
              },
              {
                "s": "BITSTAMP:BTCUSD"
              },
              {
                "s": "BITSTAMP:ETHUSD"
              },
              {
                "s": "FTX:SOLUSD"
              },
              {
                "s": "BINANCE:AVAXUSD"
              },
              {
                "s": "COINBASE:UNIUSD"
              }
            ],
            "quick_link": {
              "title": "Lebih banyak cryptocurrency",
              "href": "/markets/cryptocurrencies/prices-all/"
            }
          },
          {
            "title": "Bitcoin",
            "title_raw": "Bitcoin",
            "symbols": [
              {
                "s": "BITSTAMP:BTCUSD"
              },
              {
                "s": "COINBASE:BTCEUR"
              },
              {
                "s": "COINBASE:BTCGBP"
              },
              {
                "s": "BITFLYER:BTCJPY"
              },
              {
                "s": "CME:BTC1!"
              }
            ],
            "quick_link": {
              "title": "Lebih banyak pasangan Bitcoin",
              "href": "/symbols/BTCUSD/markets/"
            }
          },
          {
            "title": "Ethereum",
            "title_raw": "Ethereum",
            "symbols": [
              {
                "s": "BITSTAMP:ETHUSD"
              },
              {
                "s": "KRAKEN:ETHEUR"
              },
              {
                "s": "COINBASE:ETHGBP"
              },
              {
                "s": "BITFLYER:ETHJPY"
              },
              {
                "s": "BINANCE:ETHBTC"
              },
              {
                "s": "BINANCE:ETHUSDT"
              }
            ],
            "quick_link": {
              "title": "Lebih banyak pasangan Ethereum",
              "href": "/symbols/ETHUSD/markets/"
            }
          },
          {
            "title": "Solana",
            "title_raw": "Solana",
            "symbols": [
              {
                "s": "FTX:SOLUSD"
              },
              {
                "s": "BINANCE:SOLEUR"
              },
              {
                "s": "COINBASE:SOLGBP"
              },
              {
                "s": "BINANCE:SOLBTC"
              },
              {
                "s": "HUOBI:SOLETH"
              },
              {
                "s": "BINANCE:SOLUSDT"
              }
            ],
            "quick_link": {
              "title": "Lebih banyak pasangan Solana",
              "href": "/symbols/SOLUSD/markets/"
            }
          },
          {
            "title": "Uniswap",
            "title_raw": "Uniswap",
            "symbols": [
              {
                "s": "COINBASE:UNIUSD"
              },
              {
                "s": "KRAKEN:UNIEUR"
              },
              {
                "s": "COINBASE:UNIGBP"
              },
              {
                "s": "BINANCE:UNIBTC"
              },
              {
                "s": "KRAKEN:UNIETH"
              },
              {
                "s": "BINANCE:UNIUSDT"
              }
            ],
            "quick_link": {
              "title": "Lebih banyak pasangan Uniswap",
              "href": "/symbols/UNIUSD/markets/"
            }
          }
        ],
        "title_link": "/markets/cryptocurrencies/prices-all/",
        "width": "100%",
        "height": "100%",
        "showChart": true,
        "showFloatingTooltip": false,
        "locale": "id",
        "plotLineColorGrowing": "#2962FF",
        "plotLineColorFalling": "#2962FF",
        "belowLineFillColorGrowing": "rgba(41, 98, 255, 0.12)",
        "belowLineFillColorFalling": "rgba(41, 98, 255, 0.12)",
        "belowLineFillColorGrowingBottom": "rgba(41, 98, 255, 0)",
        "belowLineFillColorFallingBottom": "rgba(41, 98, 255, 0)",
        "gridLineColor": "rgba(240, 243, 250, 0)",
        "scaleFontColor": "rgba(120, 123, 134, 1)",
        "showSymbolLogo": true,
        "symbolActiveColor": "rgba(41, 98, 255, 0.12)",
        "colorTheme": "dark"
      })
        </script>
      </div>
      <!-- TradingView Widget END -->
    </div>
  </div>

  <script>
    const coinsData = '<%- JSON.stringify(coins) %>';
    const coins = JSON.parse(coinsData);

    function searchCoins() {
      const searchQuery = document.getElementById('search').value.toLowerCase();
      const filteredCoins = coins.filter(coin =>
        coin.name.toLowerCase().includes(searchQuery) ||
        coin.symbol.toLowerCase().includes(searchQuery)
      );

      const coinTableBody = document.getElementById('coinTableBody');
      coinTableBody.innerHTML = '';

      filteredCoins.slice(0, 20).forEach((coin, index) => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${index + 1}</td>
          <td><a href="/chart/${coin.symbol}">${coin.name}</a></td>
          <td>${coin.symbol}</td>
          <td>Rp${(coin.quote.USD.price * 16000).toFixed(2)}</td>
          <td>${coin.quote.USD.percent_change_1h.toFixed(2)} %</td>
          <td>${coin.quote.USD.percent_change_24h.toFixed(2)} %</td>
          <td>${coin.quote.USD.percent_change_7d.toFixed(2)} %</td>
          <td><input type="checkbox" name="selectedCoins" value="${coin.symbol}"></td>
        `;
        coinTableBody.appendChild(row);
      });
    }

    document.getElementById('monitorForm').addEventListener('submit', function(event) {
      const selectedCoins = Array.from(document.querySelectorAll('input[name="selectedCoins"]:checked'))
                                .map(input => input.value);
      if (selectedCoins.length > 6) {
        event.preventDefault();
        alert('You can select a maximum of 6 coins.');
      } else {
        const hiddenField = document.createElement('input');
        hiddenField.type = 'hidden';
        hiddenField.name = 'selectedCoins';
        hiddenField.value = selectedCoins.join(',');
        this.appendChild(hiddenField);
      }
    });
  </script>  
</body>
</html>